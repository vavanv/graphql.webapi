@model IEnumerable<GraphQL.WebApi.Mvc.Models.User>

@{
    ViewData["Title"] = "Users Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h2 class="mb-0">
                        <i class="bi bi-people-fill"></i> Users Management
                    </h2>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-person-plus"></i> Create New User
                    </a>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (ViewBag.ErrorMessage != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle"></i> @ViewBag.ErrorMessage
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Name</th>
                                    <th>Role</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                    <th>Last Login</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td>@user.Id</td>
                                        <td>
                                            <strong>@user.Username</strong>
                                        </td>
                                        <td>@user.Email</td>
                                        <td>@user.FirstName @user.LastName</td>
                                        <td>
                                            <span class="badge bg-@(user.Role switch {
                                                "Admin" => "danger",
                                                "Manager" => "warning",
                                                "User" => "primary",
                                                "Guest" => "secondary",
                                                _ => "light"
                                            })">
                                                @user.Role
                                            </span>
                                        </td>
                                        <td>
                                            @if (user.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Inactive</span>
                                            }
                                        </td>
                                        <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                                        <td>
                                            @if (user.LastLoginAt.HasValue)
                                            {
                                                @user.LastLoginAt.Value.ToString("MMM dd, yyyy HH:mm")
                                            }
                                            else
                                            {
                                                <span class="text-muted">Never</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-sm btn-info"
                                                        onclick="showUserDetails(@user.Id, '@user.Username', '@user.Email', '@user.FirstName', '@user.LastName', '@user.Role', @user.IsActive.ToString().ToLower(), '@user.CreatedAt.ToString("MMM dd, yyyy HH:mm")', '@(user.LastLoginAt?.ToString("MMM dd, yyyy HH:mm") ?? "Never")')">
                                                    <i class="bi bi-eye"></i> Details
                                                </button>
                                                <button type="button" class="btn btn-sm btn-warning"
                                                        onclick="showEditRole(@user.Id, '@user.Username', '@user.FirstName', '@user.LastName', '@user.Email', '@user.Role')">
                                                    <i class="bi bi-shield"></i> Edit Role
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (!Model.Any())
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-people display-1 text-muted"></i>
                            <h4 class="text-muted mt-3">No users found</h4>
                            <p class="text-muted">Create your first user to get started.</p>
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="bi bi-person-plus"></i> Create New User
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userDetailsModalLabel">
                    <i class="bi bi-person-circle"></i> User Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="text-primary mb-3">Basic Information</h6>
                        <dl class="row">
                            <dt class="col-sm-4">ID</dt>
                            <dd class="col-sm-8" id="detail-id"></dd>

                            <dt class="col-sm-4">Username</dt>
                            <dd class="col-sm-8">
                                <strong id="detail-username"></strong>
                            </dd>

                            <dt class="col-sm-4">Email</dt>
                            <dd class="col-sm-8" id="detail-email"></dd>

                            <dt class="col-sm-4">Full Name</dt>
                            <dd class="col-sm-8" id="detail-fullname"></dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6 class="text-primary mb-3">Account Information</h6>
                        <dl class="row">
                            <dt class="col-sm-4">Role</dt>
                            <dd class="col-sm-8" id="detail-role"></dd>

                            <dt class="col-sm-4">Status</dt>
                            <dd class="col-sm-8" id="detail-status"></dd>

                            <dt class="col-sm-4">Created</dt>
                            <dd class="col-sm-8" id="detail-created"></dd>

                            <dt class="col-sm-4">Last Login</dt>
                            <dd class="col-sm-8" id="detail-lastlogin"></dd>
                        </dl>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-12">
                        <h6 class="text-primary mb-2">Role Permissions</h6>
                        <div class="alert alert-info" id="detail-permissions">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-warning" id="edit-role-btn">
                    <i class="bi bi-shield"></i> Edit Role
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Role Modal -->
<div class="modal fade" id="editRoleModal" tabindex="-1" aria-labelledby="editRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editRoleModalLabel">
                    <i class="bi bi-shield"></i> Edit User Role
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <h6><i class="bi bi-exclamation-triangle"></i> Warning</h6>
                    <p class="mb-0">Changing a user's role will immediately affect their access permissions. Please ensure this change is appropriate.</p>
                </div>

                <div class="row mb-3">
                    <div class="col-12">
                        <h6 class="text-primary">User Information</h6>
                        <dl class="row">
                            <dt class="col-sm-3">Username</dt>
                            <dd class="col-sm-9" id="edit-username"></dd>

                            <dt class="col-sm-3">Name</dt>
                            <dd class="col-sm-9" id="edit-name"></dd>

                            <dt class="col-sm-3">Email</dt>
                            <dd class="col-sm-9" id="edit-email"></dd>

                            <dt class="col-sm-3">Current Role</dt>
                            <dd class="col-sm-9" id="edit-current-role"></dd>
                        </dl>
                    </div>
                </div>

                <form id="editRoleForm">
                    <input type="hidden" id="edit-user-id" />
                    <div class="mb-3">
                        <label for="new-role" class="form-label">New Role</label>
                        <select id="new-role" name="role" class="form-select" required>
                            <option value="Admin">Admin</option>
                            <option value="Manager">Manager</option>
                            <option value="User">User</option>
                            <option value="Guest">Guest</option>
                        </select>
                        <div class="form-text">Select the new role for this user.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning" onclick="updateUserRole()">
                    <i class="bi bi-shield"></i> Update Role
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            $('.alert').fadeOut('slow');
        }, 5000);

        function showUserDetails(id, username, email, firstName, lastName, role, isActive, createdAt, lastLogin) {
            // Populate modal with user data
            document.getElementById('detail-id').textContent = id;
            document.getElementById('detail-username').textContent = username;
            document.getElementById('detail-email').textContent = email;
            document.getElementById('detail-fullname').textContent = firstName + ' ' + lastName;

            // Set role badge
            const roleBadgeClass = role === 'Admin' ? 'danger' :
                                 role === 'Manager' ? 'warning' :
                                 role === 'User' ? 'primary' : 'secondary';
            document.getElementById('detail-role').innerHTML = `<span class="badge bg-${roleBadgeClass}">${role}</span>`;

            // Set status badge
            const statusBadge = isActive === 'true' ?
                '<span class="badge bg-success">Active</span>' :
                '<span class="badge bg-secondary">Inactive</span>';
            document.getElementById('detail-status').innerHTML = statusBadge;

            document.getElementById('detail-created').textContent = createdAt;
            document.getElementById('detail-lastlogin').textContent = lastLogin;

            // Set permissions description
            let permissionsText = '';
            switch(role) {
                case 'Admin':
                    permissionsText = 'Full system access including user management, customer management, and all administrative functions.';
                    break;
                case 'Manager':
                    permissionsText = 'Customer management capabilities including view, create, and edit customers. Can also view users.';
                    break;
                case 'User':
                    permissionsText = 'Basic customer operations including view and create customers.';
                    break;
                case 'Guest':
                    permissionsText = 'Read-only access to view customers only.';
                    break;
                default:
                    permissionsText = 'Limited access with basic viewing permissions.';
                    break;
            }
            document.getElementById('detail-permissions').innerHTML =
                `<h6><i class="bi bi-info-circle"></i> Current Role: ${role}</h6><p class="mb-0">${permissionsText}</p>`;

            // Set up edit role button
            document.getElementById('edit-role-btn').onclick = function() {
                $('#userDetailsModal').modal('hide');
                setTimeout(() => {
                    showEditRole(id, username, firstName, lastName, email, role);
                }, 300);
            };

            // Show modal
            $('#userDetailsModal').modal('show');
        }

        function showEditRole(id, username, firstName, lastName, email, role) {
            // Populate modal with user data
            document.getElementById('edit-user-id').value = id;
            document.getElementById('edit-username').textContent = username;
            document.getElementById('edit-name').textContent = firstName + ' ' + lastName;
            document.getElementById('edit-email').textContent = email;

            // Set current role badge
            const roleBadgeClass = role === 'Admin' ? 'danger' :
                                 role === 'Manager' ? 'warning' :
                                 role === 'User' ? 'primary' : 'secondary';
            document.getElementById('edit-current-role').innerHTML = `<span class="badge bg-${roleBadgeClass}">${role}</span>`;

            // Set current role in dropdown
            document.getElementById('new-role').value = role;

            // Show modal
            $('#editRoleModal').modal('show');
        }

        function updateUserRole() {
            const userId = document.getElementById('edit-user-id').value;
            const newRole = document.getElementById('new-role').value;
            const currentRole = document.getElementById('edit-current-role').textContent.trim();

            if (currentRole === newRole) {
                alert('The selected role is the same as the current role.');
                return;
            }

            if (!confirm(`Are you sure you want to change the role from "${currentRole}" to "${newRole}"? This will immediately affect the user's permissions.`)) {
                return;
            }

            // Create form data
            const formData = new FormData();
            formData.append('id', userId);
            formData.append('role', newRole);

            // Send AJAX request
            fetch('/Users/EditRoleAjax', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success message
                    showAlert('success', 'User role updated successfully!');

                    // Close modal
                    $('#editRoleModal').modal('hide');

                    // Reload page to reflect changes
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    showAlert('danger', data.message || 'Failed to update user role.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('danger', 'An error occurred while updating the user role.');
            });
        }

        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="bi bi-${type === 'success' ? 'check-circle' : 'exclamation-triangle'}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            // Remove existing alerts
            $('.alert').remove();

            // Add new alert at the top of the card body
            $('.card-body').prepend(alertHtml);

            // Auto-hide after 5 seconds
            setTimeout(() => {
                $('.alert').fadeOut('slow');
            }, 5000);
        }
    </script>
}